% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/revdepcheck.R
\name{revdep_check}
\alias{revdep_check}
\alias{revdep_reset}
\title{Run revdep checks}
\usage{
revdep_check(pkg = ".", revdeps = NULL, quiet = TRUE,
  timeout = as.difftime(10, units = "mins"), num_workers = 1,
  bioc = NULL, dependencies = NULL)

revdep_reset(pkg = ".")
}
\arguments{
\item{pkg}{Path to package.}

\item{revdeps}{A tibble as returned from \code{\link[=revdep_pkgs]{revdep_pkgs()}}. If
\code{NULL} (the default), all the revdeps of \code{pkg} are checked,
including those of Bioconductor.

If a tibble, it must include a column \code{package} and can contain
additional columns that will be used as groups in the final
report.}

\item{quiet}{Suppress output from internal processes?}

\item{timeout}{Maximum time to wait (in seconds) for \code{R CMD check} to
complete. Default is 10 minutes.}

\item{num_workers}{Number of parallel workers to use}

\item{dependencies, bioc}{Deprecated. See \code{\link[=revdep_pkgs]{revdep_pkgs()}}.}
}
\description{
\code{revdep_check()} runs \code{R CMD check} on all reverse dependencies of your
package. To avoid false positives, it runs \code{R CMD check} twice: once for
released version on CRAN and once for the local development version. It
then reports the differences so you can see what checks were previously
ok but now fail.

Once your package has been successfully submitted to CRAN, you should
run \code{revdep_reset()}. This deletes all files used for checking, freeing
up disk space and leaving you in a clean state for the next release.
}
\details{
\code{revdep_check()} proceeds in four steps:
\enumerate{
\item \strong{Init}: create the \code{revdep/} subdirectory if it doesn't already exist,
and save the list of reverse dependencies to check.
\item \strong{Install}: install the CRAN (released) and local (development)
versions of your package, including all dependencies.
\item \strong{Run}: run \code{R CMD check} twice for each reverse dependency, once
for the CRAN version and one for the local version. The checks are
run in parallel using \code{num_worker} processes.
\item \strong{Report}: generate reports showing differences between the check
results for the CRAN and local versions of your package. The focus of
the report is on new failures. The reports are saved in \code{revdep/}.
}

\code{revdep_check()} is designed to seamlessly resume in the case of failure:
just re-run \code{revdep_check()} and it will start from where it left off.
If you want to start again from scratch, run \code{revdep_reset()}.
}
\section{Structure of the revdeps tibble}{


You normally use \code{\link[=revdep_pkgs]{revdep_pkgs()}} to create a tibble suitable as
\code{revdeps} argument. You can also create it manually:
\itemize{
\item There must be a \code{package} column containing a character vector of
packages to check.
\item All other columns determine groups of packages. The groups are
checked sequentially and are included in the summary report
created by \code{\link[=revdep_report_summary]{revdep_report_summary()}}.
\item If a group column named \code{repo} is present, it is used by
\code{\link[=revdep_report_cran]{revdep_report_cran()}} to distinguish between CRAN and
Bioconductor packages. It should be a character vector. The value
\code{"CRAN"} determines whether a package comes from CRAN.
}
}

\seealso{
To see more details of problems during a run, call
\code{\link[=revdep_summary]{revdep_summary()}} and \code{\link[=revdep_details]{revdep_details()}} in another process.
}
